{"version":3,"file":"static/js/223.9f1b669f.chunk.js","mappings":"uKAkBA,EAdwB,SACtBA,GAAW,IACXC,EAAc,uDAAG,CAAC,EAClBC,EAAwB,uDAAG,CAAC,EAAC,OAE3BC,EAAAA,EAAAA,IAAS,QACPC,SAAU,CAACJ,EAAKC,GAChBI,QAAS,kBACPC,EAAAA,EAAAA,IACaN,EAAK,CAAEC,OAAAA,IACjBM,MAAK,SAACC,GAAuB,OAAKA,CAAQ,GAAC,GAC7CN,GACF,ECbDO,EAAuB,WAAH,OAASC,EAAgB,oBAAqB,C,8GCFxE,EAA4B,wBAA5B,EAA0D,kB,mECA1D,ECQa,WAET,IAAMC,GAAeF,EAAAA,EAAAA,KACfG,GAAWC,EAAAA,EAAAA,MAGXC,EAAU,CACZ,CACIC,MAAO,KACPC,UAAW,KACXC,IAAK,MAET,CACIF,MAAO,iBACPC,UAAW,gBACXC,IAAK,iBAET,CACIF,MAAO,cACPC,UAAW,aACXC,IAAK,aACLC,OAAQ,SAACC,GAAS,OAAK,8BAAGC,IAAMD,GAAME,OAAO,eAAiB,GAElE,CACIN,MAAO,gBACPC,UAAW,cACXC,IAAK,eAET,CACIF,MAAO,IACPC,UAAW,KACXC,IAAK,KACLC,OAAQ,SAACI,GAAO,OAAK,gBAAKC,UAAU,cAAa,UAAC,SAAC,IAAM,UAAC,sBAA+B,IAKjG,OACI,gBAAKA,UAAWC,EAAkB,UAC9B,iBAAKD,UAAWC,EAAY,WACxB,SAAC,IAAG,CAACC,QAAS,MAAM,UAChB,SAAC,IAAM,CAACC,QAAS,kBAAKd,EAAS,aAAa,EAAC,SAAC,yBAElD,SAAC,IAAK,CACFe,QAAShB,EAAaiB,UACtBC,WAAYC,IAAInB,EAAc,YAAa,IAAKG,QAASA,IAAU,QAIvF,C,2DCxDaR,E,QAAUyB,EAAAA,OAAa,CACnCC,QAASC,gCAGV,SAA6B3B,GAC5BA,EAAQ4B,aAAa5B,QAAQ6B,KAC5B,SAAUC,GAIT,OAHAA,EAAOC,QAAQ,WAAa,iBAC5BD,EAAOC,QAAQ,mBAAqB,kBACpCD,EAAOC,QAAoB,WAAI,aACxBD,CACR,IACA,SAACE,GAAU,OAAKC,QAAQC,OAAOF,EAAM,IAEtChC,EAAQ4B,aAAa1B,SAAS2B,KAC7B,SAACC,GAAW,OAAKA,CAAM,IACvB,SAACE,GAAgB,IAAD,EAKf,OAJS,OAALA,QAAK,IAALA,GAAe,QAAV,EAALA,EAAO9B,gBAAQ,OAAf,EAAiBiC,OAIdF,QAAQC,OAAOF,EACvB,GAEF,CAEAI,CAAoBpC,E","sources":["hooks/queries/general/useGeneralQuery.ts","hooks/queries/general/index.ts","webpack://my-app/./src/pages/Main/Main.module.scss?30cc","pages/Main/index.ts","pages/Main/Main.tsx","services/api/index.ts"],"sourcesContent":["import { AxiosResponse } from \"axios\";\r\nimport { useQuery, UseQueryOptions } from \"@tanstack/react-query\";\r\nimport { request } from \"services/api\";\r\n\r\nconst useGeneralQuery = <Data = any>(\r\n  url: string,\r\n  params: object = {},\r\n  options: UseQueryOptions = {}\r\n) =>\r\n    useQuery({\r\n      queryKey: [url, params],\r\n      queryFn: () =>\r\n        request\r\n          .get<Data>(url, { params })\r\n          .then((response: AxiosResponse) => response),\r\n      ...options,\r\n    });\r\n\r\nexport default useGeneralQuery;\r\n","import useGeneralQuery from \"./useGeneralQuery\";\r\n\r\n\r\nconst useGetDocumentsQuery = () => useGeneralQuery(\"/api/v1/documents\");\r\n\r\nexport  {\r\n    useGetDocumentsQuery\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"main_page\":\"Main_main_page__bUMo+\",\"box\":\"Main_box__p42WD\"};","import Main from \"./Main\";\r\nexport default Main;","import React from \"react\";\r\nimport {Button, Row, Table} from 'antd'\r\n\r\nimport classes from \"./Main.module.scss\";\r\nimport {useGetDocumentsQuery} from \"hooks/queries/general\";\r\nimport get from 'lodash/get';\r\nimport dayjs from \"dayjs\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Main = () => {\r\n\r\n    const getDocuments = useGetDocumentsQuery();\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'DOCUMENT TITLE',\r\n            dataIndex: 'document_name',\r\n            key: 'document_name',\r\n        },\r\n        {\r\n            title: 'CREATED ATE',\r\n            dataIndex: 'created_at',\r\n            key: 'created_at',\r\n            render: (text: any) => <>{dayjs(text).format(\"DD.MM.YYYY\")}</>,\r\n        },\r\n        {\r\n            title: 'DOCUMENT SIZE',\r\n            dataIndex: 'field_count',\r\n            key: 'field_count',\r\n        },\r\n        {\r\n            title: \"_\",\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (id: any) => <div className=\"flex-center\"><Button>Document preview</Button></div>,\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div className={classes.main_page}>\r\n            <div className={classes.box}>\r\n                <Row justify={\"end\"}>\r\n                    <Button onClick={()=> navigate(\"/main-form\")}>New document form</Button>\r\n                </Row>\r\n                <Table\r\n                    loading={getDocuments.isLoading}\r\n                    dataSource={get(getDocuments, \"data.data\", [])} columns={columns}/>;\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import axios from \"axios\";\r\n\r\nexport const request = axios.create({\r\n\tbaseURL: process.env.REACT_APP_URL\r\n});\r\n\r\nfunction generateInterceptor(request: any) {\r\n\trequest.interceptors.request.use(\r\n\t\tfunction (config: any) {\r\n\t\t\tconfig.headers[\"API-KEY\"] = \"secret-api-key\";\r\n\t\t\tconfig.headers[\"Accept-Encoding\"] = \"gzip,defiate,br\";\r\n\t\t\tconfig.headers[\"Connection\"] = \"keep-alive\";\r\n\t\t\treturn config;\r\n\t\t},\r\n\t\t(error: any) => Promise.reject(error)\r\n\t);\r\n\trequest.interceptors.response.use(\r\n\t\t(config: any) => config,\r\n\t\t(error: any) => {\r\n\t\t\tif (error?.response?.status === 401) {\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}\r\n\t);\r\n}\r\n\r\ngenerateInterceptor(request);\r\n"],"names":["url","params","options","useQuery","queryKey","queryFn","request","then","response","useGetDocumentsQuery","useGeneralQuery","getDocuments","navigate","useNavigate","columns","title","dataIndex","key","render","text","dayjs","format","id","className","classes","justify","onClick","loading","isLoading","dataSource","get","axios","baseURL","process","interceptors","use","config","headers","error","Promise","reject","status","generateInterceptor"],"sourceRoot":""}